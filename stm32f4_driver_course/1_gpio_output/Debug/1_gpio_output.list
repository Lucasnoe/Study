
1_gpio_output.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000138  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000016c  08000138  08000138  00010138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002a4  080002ac  000102ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002a4  080002a4  000102ac  2**0
                  CONTENTS
  4 .ARM          00000000  080002a4  080002a4  000102ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002a4  080002ac  000102ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002a4  080002a4  000102a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002a8  080002a8  000102a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002ac  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002ac  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000102ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000051e  00000000  00000000  000102d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000108  00000000  00000000  000107f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010900  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00010948  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00011571  00000000  00000000  00010978  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000054f  00000000  00000000  00021ee9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00062ad8  00000000  00000000  00022438  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00084f10  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  00084f60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000138 <__do_global_dtors_aux>:
 8000138:	b510      	push	{r4, lr}
 800013a:	4c05      	ldr	r4, [pc, #20]	; (8000150 <__do_global_dtors_aux+0x18>)
 800013c:	7823      	ldrb	r3, [r4, #0]
 800013e:	b933      	cbnz	r3, 800014e <__do_global_dtors_aux+0x16>
 8000140:	4b04      	ldr	r3, [pc, #16]	; (8000154 <__do_global_dtors_aux+0x1c>)
 8000142:	b113      	cbz	r3, 800014a <__do_global_dtors_aux+0x12>
 8000144:	4804      	ldr	r0, [pc, #16]	; (8000158 <__do_global_dtors_aux+0x20>)
 8000146:	f3af 8000 	nop.w
 800014a:	2301      	movs	r3, #1
 800014c:	7023      	strb	r3, [r4, #0]
 800014e:	bd10      	pop	{r4, pc}
 8000150:	20000000 	.word	0x20000000
 8000154:	00000000 	.word	0x00000000
 8000158:	0800028c 	.word	0x0800028c

0800015c <frame_dummy>:
 800015c:	b508      	push	{r3, lr}
 800015e:	4b03      	ldr	r3, [pc, #12]	; (800016c <frame_dummy+0x10>)
 8000160:	b11b      	cbz	r3, 800016a <frame_dummy+0xe>
 8000162:	4903      	ldr	r1, [pc, #12]	; (8000170 <frame_dummy+0x14>)
 8000164:	4803      	ldr	r0, [pc, #12]	; (8000174 <frame_dummy+0x18>)
 8000166:	f3af 8000 	nop.w
 800016a:	bd08      	pop	{r3, pc}
 800016c:	00000000 	.word	0x00000000
 8000170:	20000004 	.word	0x20000004
 8000174:	0800028c 	.word	0x0800028c

08000178 <main>:

//toggle bit

#define tog_bit(Y,bit_x) (Y^=(1<<bit_x))

int main(void){
 8000178:	b480      	push	{r7}
 800017a:	b083      	sub	sp, #12
 800017c:	af00      	add	r7, sp, #0

	/*Habila o clocl Ã s GPIOS A e B*/
	set_bit(RCC->AHB2ENR,GPIOBEN);
 800017e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8000182:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000184:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8000188:	f043 0302 	orr.w	r3, r3, #2
 800018c:	64d3      	str	r3, [r2, #76]	; 0x4c

	/*Define o Pino PB11 como saida*/
	set_bit(GPIOB->MODER,22);
 800018e:	4b16      	ldr	r3, [pc, #88]	; (80001e8 <main+0x70>)
 8000190:	681b      	ldr	r3, [r3, #0]
 8000192:	4a15      	ldr	r2, [pc, #84]	; (80001e8 <main+0x70>)
 8000194:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000198:	6013      	str	r3, [r2, #0]
	clr_bit(GPIOB->MODER,23);
 800019a:	4b13      	ldr	r3, [pc, #76]	; (80001e8 <main+0x70>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	4a12      	ldr	r2, [pc, #72]	; (80001e8 <main+0x70>)
 80001a0:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80001a4:	6013      	str	r3, [r2, #0]

	while(1){


//		tog_bit(GPIOB->ODR,PIN11); 			using odr register
		set_bit(GPIOB->BSRR,PIN11); 			//using BSRR register
 80001a6:	4b10      	ldr	r3, [pc, #64]	; (80001e8 <main+0x70>)
 80001a8:	699b      	ldr	r3, [r3, #24]
 80001aa:	4a0f      	ldr	r2, [pc, #60]	; (80001e8 <main+0x70>)
 80001ac:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80001b0:	6193      	str	r3, [r2, #24]
		for(int i=0; i<100000; i++){}
 80001b2:	2300      	movs	r3, #0
 80001b4:	607b      	str	r3, [r7, #4]
 80001b6:	e002      	b.n	80001be <main+0x46>
 80001b8:	687b      	ldr	r3, [r7, #4]
 80001ba:	3301      	adds	r3, #1
 80001bc:	607b      	str	r3, [r7, #4]
 80001be:	687b      	ldr	r3, [r7, #4]
 80001c0:	4a0a      	ldr	r2, [pc, #40]	; (80001ec <main+0x74>)
 80001c2:	4293      	cmp	r3, r2
 80001c4:	ddf8      	ble.n	80001b8 <main+0x40>

		set_bit(GPIOB->BSRR,(PIN11+16));
 80001c6:	4b08      	ldr	r3, [pc, #32]	; (80001e8 <main+0x70>)
 80001c8:	699b      	ldr	r3, [r3, #24]
 80001ca:	4a07      	ldr	r2, [pc, #28]	; (80001e8 <main+0x70>)
 80001cc:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80001d0:	6193      	str	r3, [r2, #24]
		for(int i=0; i<100000; i++){}
 80001d2:	2300      	movs	r3, #0
 80001d4:	603b      	str	r3, [r7, #0]
 80001d6:	e002      	b.n	80001de <main+0x66>
 80001d8:	683b      	ldr	r3, [r7, #0]
 80001da:	3301      	adds	r3, #1
 80001dc:	603b      	str	r3, [r7, #0]
 80001de:	683b      	ldr	r3, [r7, #0]
 80001e0:	4a02      	ldr	r2, [pc, #8]	; (80001ec <main+0x74>)
 80001e2:	4293      	cmp	r3, r2
 80001e4:	ddf8      	ble.n	80001d8 <main+0x60>
		set_bit(GPIOB->BSRR,PIN11); 			//using BSRR register
 80001e6:	e7de      	b.n	80001a6 <main+0x2e>
 80001e8:	48000400 	.word	0x48000400
 80001ec:	0001869f 	.word	0x0001869f

080001f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001f0:	480d      	ldr	r0, [pc, #52]	; (8000228 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001f8:	480c      	ldr	r0, [pc, #48]	; (800022c <LoopForever+0x6>)
  ldr r1, =_edata
 80001fa:	490d      	ldr	r1, [pc, #52]	; (8000230 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001fc:	4a0d      	ldr	r2, [pc, #52]	; (8000234 <LoopForever+0xe>)
  movs r3, #0
 80001fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000200:	e002      	b.n	8000208 <LoopCopyDataInit>

08000202 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000202:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000204:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000206:	3304      	adds	r3, #4

08000208 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000208:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800020a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800020c:	d3f9      	bcc.n	8000202 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800020e:	4a0a      	ldr	r2, [pc, #40]	; (8000238 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000210:	4c0a      	ldr	r4, [pc, #40]	; (800023c <LoopForever+0x16>)
  movs r3, #0
 8000212:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000214:	e001      	b.n	800021a <LoopFillZerobss>

08000216 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000216:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000218:	3204      	adds	r2, #4

0800021a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800021a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800021c:	d3fb      	bcc.n	8000216 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800021e:	f000 f811 	bl	8000244 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000222:	f7ff ffa9 	bl	8000178 <main>

08000226 <LoopForever>:

LoopForever:
  b LoopForever
 8000226:	e7fe      	b.n	8000226 <LoopForever>
  ldr   r0, =_estack
 8000228:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 800022c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000230:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000234:	080002ac 	.word	0x080002ac
  ldr r2, =_sbss
 8000238:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800023c:	2000001c 	.word	0x2000001c

08000240 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000240:	e7fe      	b.n	8000240 <ADC_IRQHandler>
	...

08000244 <__libc_init_array>:
 8000244:	b570      	push	{r4, r5, r6, lr}
 8000246:	4d0d      	ldr	r5, [pc, #52]	; (800027c <__libc_init_array+0x38>)
 8000248:	4c0d      	ldr	r4, [pc, #52]	; (8000280 <__libc_init_array+0x3c>)
 800024a:	1b64      	subs	r4, r4, r5
 800024c:	10a4      	asrs	r4, r4, #2
 800024e:	2600      	movs	r6, #0
 8000250:	42a6      	cmp	r6, r4
 8000252:	d109      	bne.n	8000268 <__libc_init_array+0x24>
 8000254:	4d0b      	ldr	r5, [pc, #44]	; (8000284 <__libc_init_array+0x40>)
 8000256:	4c0c      	ldr	r4, [pc, #48]	; (8000288 <__libc_init_array+0x44>)
 8000258:	f000 f818 	bl	800028c <_init>
 800025c:	1b64      	subs	r4, r4, r5
 800025e:	10a4      	asrs	r4, r4, #2
 8000260:	2600      	movs	r6, #0
 8000262:	42a6      	cmp	r6, r4
 8000264:	d105      	bne.n	8000272 <__libc_init_array+0x2e>
 8000266:	bd70      	pop	{r4, r5, r6, pc}
 8000268:	f855 3b04 	ldr.w	r3, [r5], #4
 800026c:	4798      	blx	r3
 800026e:	3601      	adds	r6, #1
 8000270:	e7ee      	b.n	8000250 <__libc_init_array+0xc>
 8000272:	f855 3b04 	ldr.w	r3, [r5], #4
 8000276:	4798      	blx	r3
 8000278:	3601      	adds	r6, #1
 800027a:	e7f2      	b.n	8000262 <__libc_init_array+0x1e>
 800027c:	080002a4 	.word	0x080002a4
 8000280:	080002a4 	.word	0x080002a4
 8000284:	080002a4 	.word	0x080002a4
 8000288:	080002a8 	.word	0x080002a8

0800028c <_init>:
 800028c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800028e:	bf00      	nop
 8000290:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000292:	bc08      	pop	{r3}
 8000294:	469e      	mov	lr, r3
 8000296:	4770      	bx	lr

08000298 <_fini>:
 8000298:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800029a:	bf00      	nop
 800029c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800029e:	bc08      	pop	{r3}
 80002a0:	469e      	mov	lr, r3
 80002a2:	4770      	bx	lr
